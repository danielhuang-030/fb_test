version: '3'

networks:
    app-network:
        driver: bridge

services:

#app-db
    app-db:
        image: mysql:5.7
        container_name: app-db
        restart: always
        ports:
            - "${DB_PORT:-12006}:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-twitter_test}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root}
            TZ: ${DB_TZ:-Asia/Taipei}
        command: [
            "--character-set-server=utf8mb4",
            "--collation-server=utf8mb4_unicode_ci",
            "--innodb-use-native-aio=0",
            "--server-id=1",
            "--log_bin=ON",
            "--default-authentication-plugin=mysql_native_password"
        ]
        volumes:
            - ./data/mysql:/var/lib/mysql
        networks:
            - app-network

#app-redis
    app-redis:
        build:
            context: .
            dockerfile: /dockerfile/redis.dockerfile
        image: danielhuang030/app-redis:0.0.1
        container_name: app-redis
        restart: always
        ports:
            - "${REDIS_PORT:-12009}:6379"
        volumes:
            - ./data/redis:/data
        networks:
            - app-network

#phpMyAdmin
    pma:
        image: phpmyadmin/phpmyadmin:latest
        container_name: app-pma
        restart: always
        volumes:
            - ./conf/phpMyAdmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
        ports:
            - "${PMA_PORT:-12010}:80"
        environment:
            SESSION_TIMEOUT: ${PMA_SESSION_TIMEOUT:-86400}
            PMA_HOST: app-db
        networks:
            - app-network
        depends_on:
            - app-db

#phpRedisAdmin
    pra:
        image: erikdubbelboer/phpredisadmin:latest
        container_name: app-pra
        restart: always
        ports:
            - "${PMA_PORT:-12011}:80"
        environment:
            REDIS_1_HOST: app-redis
            REDIS_1_NAME: app-redis
        networks:
            - app-network
        depends_on:
            - app-redis

#twitter-test
    twitter-test:
        build:
            context: .
            dockerfile: /dockerfile/app.dockerfile
        image: danielhuang030/twitter-test:0.0.4
        container_name: twitter-test
        restart: always
        volumes:
            - ../:/var/www/html/
            - ./conf/supervisord/supervisord.conf:/etc/supervisord.conf
            - ./conf/php/php.ini:/usr/local/etc/php/conf.d/php-custom.ini
            - ./conf/cron/root:/etc/crontabs/root
        ports:
            - '${SUPERVISORD_PORT:-12008}:9001'
        networks:
            - app-network
        depends_on:
            - app-db
            - app-redis

#laravel-echo-server
    # laravel-echo-server:
    #     build:
    #         context: .
    #         dockerfile: /dockerfile/laravel-echo-server.dockerfile
    #     image: danielhuang030/laravel-echo-server:0.0.1
    #     container_name: laravel-echo-server
    #     restart: always
    #     links:
    #         - app-redis
    #     ports:
    #         - "${WEBSOCKET_PORT:-12007}:6001"
    #     networks:
    #         - app-network

#soketi
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        container_name: soketi
        restart: always
        environment:
            DEBUG: '1'
            DEFAULT_APP_ID: ${SOKETI_APP_ID:-app-id}
            DEFAULT_APP_KEY: ${SOKETI_APP_KEY:-app-key}
            DEFAULT_APP_SECRET: ${SOKETI_APP_SECRET:-app-secret}
            PORT: ${SOKETI_PORT:-6001}
        ports:
            - '${SOKETI_EXPOSE_PORT:-12004}:${SOKETI_PORT:-6001}'
        networks:
            - app-network

#web-server
    web-server:
        image: nginx:alpine
        container_name: web-server
        restart: always
        volumes:
            - ../:/var/www/html
            - ./conf/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./log/nginx/:/var/log/nginx
        ports:
            - "${WEB_PORT:-12001}:12001"
        networks:
            - app-network
